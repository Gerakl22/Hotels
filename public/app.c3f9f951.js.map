{"version":3,"sources":["js/infoAboutHotel.js","js/listHotels.js","js/form.js","js/app.js"],"names":["InfoAboutHotel","container","data","console","log","_init","render","innerHTML","_clear","template","date","address","stars","anotherInfo","ListHotels","infoAboutHotel","document","querySelector","activeListHotels","_handleClickListHotels","_clickListHotels","bind","addEventListener","classList","remove","event","target","value","includes","id","getAttribute","add","_removeActive","fetch","method","then","response","json","list","forEach","item","catch","error","nameHotel","city","Form","form","button","listHotels","_handleSubmitBtn","_submit","index","Date","getTime","toLocaleDateString","toLocaleTimeString","slice","url","headers","body","JSON","stringify","preventDefault","checkValidity","indexDate","_createIndexDate","dateTime","_createLocalDate","formData","FormData","append","name","_send","reset","formHotelNode","listHotelsNode"],"mappings":"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","file":"app.c3f9f951.js","sourceRoot":"..\\client","sourcesContent":["export class InfoAboutHotel {\r\n  constructor(container, data) {\r\n    this.container = container;\r\n    this.data = data;\r\n\r\n    console.log(this.container, this.data);\r\n\r\n    this._init();\r\n  }\r\n\r\n  _init() {\r\n    this.render();\r\n  }\r\n\r\n  _clear() {\r\n    this.container.innerHTML = \"\";\r\n  }\r\n\r\n  render() {\r\n    this._clear();\r\n\r\n    const template = `\r\n        <h5 class='hotel-date'>${this.data.date}</h5>\r\n        <div class='hotel-address'>Адрес: ${this.data.address}</div>\r\n        <div class='hotel-stars'>Количество звезд: ${this.data.stars}</div>\r\n        <div class='hotel-anotherInfo'>Дополнительная информация: ${this.data.anotherInfo}</div>\r\n    `;\r\n\r\n    this.container.innerHTML = this.container.innerHTML + template;\r\n  }\r\n}\r\n","import { InfoAboutHotel } from \"./infoAboutHotel\";\r\n\r\nexport class ListHotels {\r\n  constructor(container, data) {\r\n    this.container = container;\r\n    this.data = data;\r\n    this.infoAboutHotel = document.querySelector(\"#infoAboutHotel\");\r\n    this.activeListHotels = null;\r\n\r\n    this._handleClickListHotels = this._clickListHotels.bind(this);\r\n\r\n    this._init();\r\n  }\r\n\r\n  _init() {\r\n    this.render();\r\n    this.container.addEventListener(\"click\", this._handleClickListHotels);\r\n  }\r\n\r\n  _removeActive() {\r\n    if (!this.activeListHotels) return;\r\n\r\n    this.activeListHotels.classList.remove(\"active\");\r\n  }\r\n\r\n  _clickListHotels(event) {\r\n    const target = event.target;\r\n\r\n    if (target.classList.value.includes(\"hotel-item\")) {\r\n      const id = target.getAttribute(\"data-id\");\r\n\r\n      target.classList.add(\"active\");\r\n      this._removeActive();\r\n      this.activeListHotels = target;\r\n\r\n      fetch(\"/api/data\", { method: \"GET\" })\r\n        .then((response) => response.json())\r\n        .then((data) => {\r\n          data.list.forEach((item) => {\r\n            if (id == item.id) {\r\n              new InfoAboutHotel(this.infoAboutHotel, item);\r\n            }\r\n          });\r\n        })\r\n        .catch((error) => console.error(error));\r\n    }\r\n  }\r\n\r\n  _clear() {\r\n    this.container.innerHTML = \"\";\r\n  }\r\n\r\n  render() {\r\n    this._clear();\r\n\r\n    this.data.forEach((item) => {\r\n      const template = `\r\n            <div class=\"hotel-item p-2\" data-id=\"${item.id}\"> \r\n              <h6 id=\"hotelItem\">${item.nameHotel} в городе ${item.city}</h6>\r\n              <h7 class='hotel-date-item'>${item.date}</h7>\r\n            </div>  \r\n       `;\r\n\r\n      this.container.innerHTML = this.container.innerHTML + template;\r\n    });\r\n  }\r\n}\r\n","import { ListHotels } from \"./listHotels\";\r\n\r\nexport class Form {\r\n  constructor(form) {\r\n    this.form = form;\r\n    this.button = document.querySelector(\"#btnSubmit\");\r\n    this.listHotels = document.querySelector(\"#listHotels\");\r\n\r\n    this._handleSubmitBtn = this._submit.bind(this);\r\n\r\n    this._init();\r\n  }\r\n\r\n  _init() {\r\n    this.button.addEventListener(\"click\", this._handleSubmitBtn);\r\n  }\r\n\r\n  _createIndexDate() {\r\n    const index = new Date().getTime();\r\n\r\n    return index;\r\n  }\r\n\r\n  _createLocalDate() {\r\n    const date = new Date();\r\n\r\n    return (\r\n      date.toLocaleDateString() + \" \" + date.toLocaleTimeString().slice(0, -3)\r\n    );\r\n  }\r\n\r\n  _send(data) {\r\n    const url = \"/api/data\";\r\n\r\n    fetch(url, {\r\n      method: \"POST\",\r\n      headers: { \"Content-Type\": \"application/json;charset=UTF-8\" },\r\n      body: JSON.stringify(data),\r\n    })\r\n      .then((response) => response.json())\r\n      .then((data) => new ListHotels(this.listHotels, data.list))\r\n      .catch((error) => console.error(error));\r\n  }\r\n\r\n  _submit(event) {\r\n    event.preventDefault();\r\n\r\n    if (!this.form.checkValidity()) {\r\n      this.form.classList.add(\"invalid\");\r\n    } else {\r\n      this.form.classList.remove(\"invalid\");\r\n\r\n      const indexDate = this._createIndexDate();\r\n      const dateTime = this._createLocalDate();\r\n\r\n      const formData = new FormData(this.form);\r\n      formData.append(\"id\", indexDate);\r\n      formData.append(\"date\", dateTime);\r\n\r\n      const data = {};\r\n\r\n      for (let [name, value] of formData) {\r\n        data[name] = value;\r\n      }\r\n\r\n      this._send(data);\r\n\r\n      this.form.reset();\r\n    }\r\n  }\r\n}\r\n","import { Form } from \"./form\";\r\nimport { ListHotels } from \"./listHotels\";\r\n\r\nconst formHotelNode = document.querySelector(\"#form\");\r\n\r\nnew Form(formHotelNode);\r\n\r\nconst listHotelsNode = document.querySelector(\"#listHotels\");\r\n\r\nfetch(\"/api/data\", { method: \"GET\" })\r\n  .then((response) => response.json())\r\n  .then((data) => new ListHotels(listHotelsNode, data.list))\r\n  .catch((error) => console.error(error));\r\n"]}